{% macro field(settings) %}
	{% set settings = settings|default({}) %}

	{% set id = settings.id|default(false) %}
	{% set label = settings.label|default(false) %}
	{% set instructions = settings.instructions|default(false) %}
	{% set required = settings.required|default(false) %}
	{% set locale = settings.locale|default(false) %}
	{% set input = settings.input|default('') %}
	{% set warning = settings.warning|default(false) %}
	{% set errors = settings.errors|default(false) %}

	<div class="field">
		{% if label or instructions %}
			<div class="heading">
				{% if label %}
					<label{% if required %} class="required"{% endif %}{% if id %} for="{{ id }}"{% endif %}>
						{{ label|raw }}
						{% if locale %}
							<span class="locale">{{ locale }}</span>
						{% endif %}
					</label>
				{% endif %}
				{% if instructions %}
					<div class="instructions">{{ instructions|raw }}</div>
				{% endif %}
			</div>
		{% endif %}
		<div class="input {{ orientation }}{% if errors %} errors{% endif %}">
			{{ input|raw }}
		</div>
		{% if warning %}
			<p class="warning">{{ warning }}</p>
		{% endif %}
		{% if errors %}
			<ul class="errors">
				{% for error in errors %}
					<li>{{ error }}</li>
				{% endfor %}
			</ul>
		{% endif %}
	</div>
{% endmacro %}

{% macro input(settings) %}
	{% from _self import field %}
	{% set settings = settings|default({}) %}

	{% set type = settings.type|default('text') %}
	{% set attributes = settings.attributes|default({}) %}
	{% set id = settings.id|default('') %}
	{% set name = settings.name|default('') %}
	{% set value = settings.value|default('') %}
	{% set class = settings.class|default('') %}
	{% set fullWidth = settings.fullWidth|default(true) %}

	{% set input %}
		<input class="text {{ fullWidth ? 'fullwidth' : '' }} {{ class }}"
			   type="{{ type }}"
			   id="{{ id }}"
			   name="{{ name }}"
			   value="{{ value }}"
			   {% for attrName, attrValue in attributes %}
		           {{ attrName }}="{{ attrValue }}"
		       {% endfor %}
			   autocomplete="off">
	{% endset %}

	{{ field(settings|merge({input: input})) }}
{% endmacro %}

{% import _self as macros %}

<div>
	<input type="hidden" name="{{ 'sortOrder'|ns }}" value="{{ sortOrder }}" data-neo-bts="input.sortOrder">

	<div>
		{{ macros.input({
			type: 'text',
			name: 'name'|ns,
			label: "Name"|t,
			instructions: "What this block type will be called in the CP."|t,
			required: true,
			value: name,
			errors: errors.name,
			attributes: {
				'data-neo-bts': 'input.name'
			}
		}) }}

		{{ macros.input({
			type: 'text',
			name: 'handle'|ns,
			label: "Handle"|t,
			instructions: "How you'll refer to this block type in the templates."|t,
			required: true,
			class: 'code',
			value: handle,
			errors: errors.handle,
			attributes: {
				'data-neo-bts': 'input.handle'
			}
		}) }}

		{{ macros.input({
			type: 'number',
			name: 'maxBlocks'|ns,
			label: "Max Blocks"|t,
			instructions: "The maximum number of blocks of this type the field is allowed to have."|t,
			fullWidth: false,
			value: maxBlocks > 0 ? maxBlocks : null,
			errors: errors.maxBlocks,
			attributes: {
				min: 0,
				style: 'width: 80px;',
				'data-neo-bts': 'input.maxBlocks'
			}
		}) }}
	</div>

	<hr>

	<a class="error delete" data-neo-bts="button.delete">{{ "Delete block type"|t }}</a>
</div>